---

- name: Set file name
  set_fact:
    restic_file_name: "restic_{{ restic_version }}_{{ ansible_system|lower }}_{{ restic_arch }}.bz2"

- name: Download archive
  get_url:
    url: "https://github.com/restic/restic/releases/download/v{{ restic_version }}/{{ restic_file_name }}"
    dest: "/var/tmp/{{ restic_file_name }}"
    checksum: "sha256:https://github.com/restic/restic/releases/download/v{{ restic_version }}/SHA256SUMS"

- name: Unpack restic
  shell: "bzip2 -dc /var/tmp/{{ restic_file_name }} > /opt/restic"
  args:
    creates: /opt/restic

- name: Change restic ownership, group and permissions
  file:
    path: /opt/restic
    owner: root
    mode: "0755"

- name: Populate job defaults
  set_fact:
    restic_job_defaults:
      runas: "{{ restic_runas }}"
      keep_schedule:
        daily: "{{ restic_keep_schedule.daily }}"
        weekly: "{{ restic_keep_schedule.weekly }}"
        monthly: "{{ restic_keep_schedule.monthly }}"

- name: Propagate jobs with default values
  set_fact:
    restic_jobs_propagated: |
      {{ restic_jobs_propagated | default([]) +
        [
          restic_job_defaults |
          combine({'password_command': restic_password_command }) |
          combine(item) |
          combine({'schedule':
            restic_run_schedule | combine( item.schedule | default({}) )
          })
        ]
      }}
  loop: "{{ restic_jobs }}"
  loop_control:
    loop_var: item
  # no_log: true

- name: Create backup scripts folder
  file:
    path: "{{ restic_run_dir_prefix }}"
    mode: 0700
    state: directory
    owner: "{{ item.runas }}"
  loop: "{{ restic_jobs_propagated }}"

- name: Create backup scripts
  template:
    src: backup.sh.j2
    dest: "{{ restic_run_dir_prefix }}/rs-backup-{{ item.name }}.sh"
    mode: 0700
    owner: "{{ item.runas }}"
  loop: "{{ restic_jobs_propagated }}"

- name: Create check scripts
  template:
    src: check.sh.j2
    dest: "{{ restic_run_dir_prefix }}/rs-check-{{ item.name }}.sh"
    mode: 0700
    owner: "root"
  loop: "{{ restic_jobs_propagated }}"

- name: Create init scripts
  template:
    src: init.sh.j2
    dest: "{{ restic_run_dir_prefix }}/rs-init-{{ item.name }}.sh"
    mode: 0700
    owner: "root"
  loop: "{{ restic_jobs_propagated }}"

- name: Create excludes
  template:
    src: exclude.txt.j2
    dest: "{{ restic_run_dir_prefix }}/{{ item.name }}-exclude.txt"
  loop: "{{ restic_jobs_propagated }}"
  when: "'exclude' in item"

- name: Initialize repo
  shell: "{{ restic_run_dir_prefix }}/rs-init-{{ item.name }}.sh"
  args:
    creates: "{{ restic_run_dir_prefix }}/.{{ item.name }}.initialized"
  register: rs_init
  failed_when: rs_init.rc >= 2
  when: not restic_manual_init
  loop: "{{ restic_jobs_propagated }}"

- name: create crontabs
  cron:
    name: "restic backup: {{ item.name }}"
    job: "{{ restic_run_dir_prefix }}/rs-backup-{{ item.name }}.sh"
    day: "{{ item.schedule.day }}"
    weekday: "{{ item.schedule.weekday }}"
    hour: "{{ item.schedule.hour }}"
    minute: "{{ item.schedule.minute }}"
    user: "{{ item.runas }}"
  loop: "{{ restic_jobs_propagated }}"
